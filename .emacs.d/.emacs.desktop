;; -*- mode: emacs-lisp; coding: emacs-mule; -*-
;; --------------------------------------------------------------------------
;; Desktop File for Emacs
;; --------------------------------------------------------------------------
;; Created Tue Feb 21 01:29:15 2017
;; Desktop file format version 206
;; Emacs version 24.5.1

;; Global section:
(setq desktop-saved-frameset [frameset 1 (22699 35291 151345 915000) (desktop . "206") "christer@LabLinux" nil nil ((((font-backend xft x) (font . "-DAMA-Ubuntu Mono-normal-normal-normal-*-17-*-*-*-m-0-iso10646-1") (font-parameter . "Ubuntu Mono 13") (border-width . 0) (internal-border-width . 0) (right-divider-width . 0) (bottom-divider-width . 0) (vertical-scroll-bars) (foreground-color . "#c5c8c6") (background-color . "#1d1f21") (mouse-color . "black") (border-color . "black") (screen-gamma) (line-spacing) (left-fringe . 9) (right-fringe . 9) (scroll-bar-foreground . "#eeeeee") (scroll-bar-background . "#444444") (menu-bar-lines . 0) (tool-bar-lines . 0) (title) (wait-for-wm . t) (fullscreen) (tool-bar-position . top) (icon-type . t) (auto-raise) (auto-lower) (cursor-type . box) (scroll-bar-width . 0) (alpha) (display-type . color) (background-mode . dark) (cursor-color . "white") (visibility) (frameset--id . "A523-C4CB-2440-95A5") (frameset--mini t) (modeline . t) (minibuffer . t) (unsplittable) (icon-name) (display . ":0") (explicit-name) (height . 79) (width . 283) (left . 0) (top . 0)) ((min-height . 4) (min-width . 10) (min-height-ignore . 2) (min-width-ignore . 4) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 72) (min-pixel-width . 90) (min-pixel-height-ignore . 36) (min-pixel-width-ignore . 36) (min-pixel-height-safe . 18) (min-pixel-width-safe . 18)) leaf (pixel-width . 2565) (pixel-height . 1404) (total-width . 285) (total-height . 78) (normal-height . 1.0) (normal-width . 1.0) (buffer "*scratch*" (selected) (hscroll . 0) (fringes 9 9 nil) (margins nil) (scroll-bars 0 0 nil nil) (vscroll . 0) (dedicated) (point . 1) (start . 1))) (((font-backend xft x) (font . "-DAMA-Ubuntu Mono-normal-normal-normal-*-17-*-*-*-m-0-iso10646-1") (font-parameter . "Ubuntu Mono 13") (border-width . 0) (internal-border-width . 0) (right-divider-width . 0) (bottom-divider-width . 0) (vertical-scroll-bars) (foreground-color . "#c5c8c6") (background-color . "#1d1f21") (mouse-color . "black") (border-color . "black") (screen-gamma) (line-spacing) (left-fringe . 9) (right-fringe . 9) (scroll-bar-foreground . "#eeeeee") (scroll-bar-background . "#444444") (menu-bar-lines . 0) (tool-bar-lines . 0) (title) (wait-for-wm . t) (fullscreen . maximized) (tool-bar-position . top) (icon-type . t) (auto-raise) (auto-lower) (cursor-type . box) (scroll-bar-width . 0) (alpha) (horizontal-scroll-bars . t) (display-type . color) (background-mode . dark) (cursor-color . "white") (sticky) (environment) (frameset--id . "6A68-C446-C5D3-77EC") (frameset--mini t . t) (modeline . t) (minibuffer . t) (unsplittable) (icon-name) (display . ":0") (explicit-name) (visibility . t) (height . 35) (width . 80) (left + -1) (top + -1)) ((min-height . 8) (min-width . 20) (min-height-ignore . 4) (min-width-ignore . 8) (min-height-safe . 2) (min-width-safe . 4) (min-pixel-height . 144) (min-pixel-width . 180) (min-pixel-height-ignore . 72) (min-pixel-width-ignore . 72) (min-pixel-height-safe . 36) (min-pixel-width-safe . 36)) hc (pixel-width . 738) (pixel-height . 612) (total-width . 82) (total-height . 34) (normal-height . 1.0) (normal-width . 1.0) (combination-limit) (vc (pixel-width . 371) (pixel-height . 612) (total-width . 41) (total-height . 34) (normal-height . 1.0) (normal-width . 0.5) (combination-limit) (leaf (pixel-width . 371) (pixel-height . 273) (total-width . 41) (total-height . 15) (normal-height . 0.45175766641735227) (normal-width . 1.0) (buffer "neuron.h" (selected) (hscroll . 0) (fringes 9 9 nil) (margins nil) (scroll-bars 0 0 t nil) (vscroll . 0) (dedicated) (point . 1165) (start . 731))) (leaf (last . t) (pixel-width . 371) (pixel-height . 339) (total-width . 41) (total-height . 19) (normal-height . 0.5482423335826478) (normal-width . 1.0) (buffer "network.cpp" (selected) (hscroll . 0) (fringes 9 9 nil) (margins nil) (scroll-bars 0 0 t nil) (vscroll . 0) (dedicated) (point . 1437) (start . 1437)))) (leaf (last . t) (pixel-width . 367) (pixel-height . 612) (total-width . 41) (total-height . 34) (normal-height . 1.0) (normal-width . 0.5) (buffer "network.cpp" (selected . t) (hscroll . 0) (fringes 9 9 nil) (margins nil) (scroll-bars 0 0 t nil) (vscroll . 0) (dedicated) (point . 1983) (start . 1843)))))])
(setq desktop-missing-file-warning nil)
(setq tags-file-name nil)
(setq tags-table-list nil)
(setq search-ring '("et" "yasni" "header" ".emacs" "proje" "compile" "QT4" "workgroup" "yes" "kill" "bookmarkqq" "bookmark" "bm" "helm-ag" "search"))
(setq regexp-search-ring nil)
(setq register-alist nil)
(setq file-name-history '("~/.emacs.d/bookmarks" "~/projects/neuronet/CMakeLists.txt" "~/projects/neuronet/src/CMakeLists.txt" "~/projects/neuronet/src/neuralnet.log" "~/.emacs.d/lisp/sourcepair.el" "~/.emacs" "~/projects/neuronet/src/neuron.cpp" "~/projects/neuronet/CMakeLists.txt" "~/projects/neuronet/src/CMakeLists.txt" "~/projects/neuronet/src/neuralnet.log" "~/.emacs.d/lisp/sourcepair.el" "~/.emacs" "~/projects/neuronet/src/neuron.h" "~/projects/neuronet/CMakeLists.txt" "~/projects/neuronet/src/CMakeLists.txt" "~/projects/neuronet/src/neuralnet.log" "~/.emacs.d/lisp/sourcepair.el" "~/.emacs" "~/projects/neuronet/src/neuron.cpp" "~/projects/neuronet/CMakeLists.txt" "~/projects/neuronet/src/CMakeLists.txt" "~/projects/neuronet/src/neuralnet.log" "~/.emacs.d/lisp/sourcepair.el" "~/.emacs" "~/projects/neuronet/src/main.cpp" "~/projects/neuronet/qt/src/mainwindow.cpp" "~/projects/neuronet/qt/inc/mainwindow.h" "~/projects/neuronet/src/network.h" "~/projects/neuronet/src/neuralapi.h" "~/projects/neuronet/src/neuron.cpp" "~/projects/neuronet/CMakeLists.txt" "~/projects/neuronet/src/CMakeLists.txt" "~/projects/neuronet/src/neuralnet.log" "~/.emacs.d/lisp/sourcepair.el" "~/.emacs" "~/projects/neuronet/src/neuron.cpp" "~/projects/neuronet/CMakeLists.txt" "~/projects/neuronet/src/CMakeLists.txt" "~/projects/neuronet/src/neuralnet.log" "~/.emacs.d/lisp/sourcepair.el" "~/.emacs" "~/projects/neuronet/src/neuron.cpp" "~/.emacs.d/bookmarks" "~/projects/neuronet/src/neuron.h" "/home/christer/projects/neuronet/src/test.h" "~/.emacs" "/home/christer/projects/neuronet/src/neuralapi.h" "/home/christer/projects/neuronet/src/neuralnet.log" "~/projects/neuronet/CMakeLists.txt" "~/projects/neuronet/src/CMakeLists.txt" "~/projects/neuronet/src/network.cpp" "~/.emacs.d/lisp/sourcepair.el" "~/projects/neuronet/CMakeLists.txt" "~/projects/neuronet/src/CMakeLists.txt" "~/projects/neuronet/src/network.cpp" "~/.emacs.d/lisp/sourcepair.el" "~/projects/neuronet/src/main.cpp" "~/.emacs.d/bookmarks" "~/projects/neuronet/CMakeLists.txt" "~/projects/neuronet/src/CMakeLists.txt" "~/projects/neuronet/qt/src/mainwindow.cpp" "~/.emacs.d/lisp/sourcepair.el" "~/projects/neuronet/CMakeLists.txt" "~/projects/neuronet/src/CMakeLists.txt" "~/projects/neuronet/src/network.cpp" "~/projects/neuronet/src/network.h" "~/.emacs.d/lisp/sourcepair.el" "~/projects/neuronet/qt/inc/ui_mainwindow.h" "~/projects/neuronet/qt/inc/mainwindow.h" "~/projects/neuronet/qt/src/mainwindow.cpp" "/home/christer/projects/neuronet/qt-src/mainwindow.h" "/home/christer/projects/neuronet/qt-src/mainwindow.cpp" "/home/christer/projects/neuronet/src/main.cpp" "~/.emacs.d/bookmarks" "~/projects/neuronet/src/neuron.cpp" "/home/christer/projects/neuronet/CMakeLists.txt" "/home/christer/projects/neuronet/src/CMakeLists.txt" "~/.emacs" "~/.emacs_workgroups" "~/projects/neuronet/src/spdlog/fmt/bundled/format.h" "~/.emacs.d/elpa/helm-ag-20170209.745/helm-ag-autoloads.el" "~/projects/neuronet/src/spdlog/fmt/bundled/format.h" "~/.emacs.d/elpa/ag-20161228.1641/ag-autoloads.el" "~/projects/neuronet/src/neuron.cpp" "~/projects/neuronet/src/neuron.h" "~/.emacs" "~/projects/neuronet/src/network.cpp" "~/.emacs.d/elpa/workgroups2-20141102.1122/workgroups2-autoloads.el" "~/.emacs.d/elpa/workgroups-20110726.941/workgroups-autoloads.el" "~/projects/neuronet/src/neuron.cpp" "~/projects/neuronet/src/main.cpp" "~/Dropbox/emacs/.emacs" "~/Dropbox/emacs/elisp/workgroups/README.md" "~/Dropbox/emacs/elisp/workgroups/workgroups.el" "~/tmp/elisp/.emacs" "~/.emacs.d/elpa/session-20120510.1700/session-autoloads.el" "~/.emacs.d/.emacs_workgroups" "~/.emacs.d/elpa/anaphora-20140728.1536/anaphora-autoloads.el" "~/.emacs.d/elpa/f-20161002.800/f-autoloads.el" "~/.emacs.d/elpa/s-20160928.636/s-autoloads.el" "/usr/include/c++/6/bits/stl_vector.h" "/usr/include/c++/6/bits/vector.tcc" "~/projects/neuronet/src/network.h" "~/.emacs.d/bookmarks" "~/projects/neuronet/gtest/googlemock/test/gmock-actions_test.cc" "~/projects/goeuro/src/busroute.cpp" "~/.emacs.d/elpa/ggtags-20161022.251/ggtags-autoloads.el" "~/.emacs.d/elpa/yasnippet-20170216.1928/yasnippet-autoloads.el" "~/projects/neuronet/build/compile_commands.json" "~/projects/neuronet/build/CMakeCache.txt"))

;; Buffer section -- buffers listed in same order as in buffer list:
(desktop-create-buffer 206
  "/home/christer/projects/neuronet/src/network.cpp"
  "network.cpp"
  'c++-mode
  '(abbrev-mode company-mode flycheck-mode yas-minor-mode helm-mode persistent-scratch-autosave-mode uncrustify-mode cmake-project-mode)
  1983
  '(1985 nil)
  nil
  nil
  '((buffer-file-coding-system . undecided-unix)))

(desktop-create-buffer 206
  "/home/christer/projects/neuronet/src/neuron.h"
  "neuron.h"
  'c-mode
  '(abbrev-mode company-mode flycheck-mode yas-minor-mode helm-mode persistent-scratch-autosave-mode uncrustify-mode cmake-project-mode)
  1165
  '(960 nil)
  nil
  nil
  '((buffer-file-coding-system . undecided-unix)))

(desktop-create-buffer 206
  "/home/christer/projects/neuronet/src/neuron.cpp"
  "neuron.cpp"
  'c++-mode
  '(abbrev-mode company-mode flycheck-mode yas-minor-mode helm-mode persistent-scratch-autosave-mode uncrustify-mode cmake-project-mode egg-minor-mode)
  747
  '(1 nil)
  nil
  nil
  '((buffer-file-coding-system . undecided-unix) (overwrite-mode)))

(desktop-create-buffer 206
  nil
  "*compilation*"
  'compilation-mode
  '(company-mode yas-minor-mode helm-mode persistent-scratch-autosave-mode)
  588
  '(588 nil)
  t
  '(:command ("nn" compilation-mode nil nil) :dir "/home/christer/projects/neuronet/src/")
  nil)

(desktop-create-buffer 206
  "/home/christer/projects/neuronet/src/network.h"
  "network.h"
  'c-mode
  '(abbrev-mode company-mode flycheck-mode yas-minor-mode helm-mode persistent-scratch-autosave-mode uncrustify-mode cmake-project-mode)
  995
  '(1 nil)
  nil
  nil
  '((buffer-file-coding-system . undecided-unix)))

(desktop-create-buffer 206
  "/home/christer/projects/neuronet/src/CMakeLists.txt"
  "CMakeLists.txt"
  'cmake-mode
  '(company-mode flycheck-mode yas-minor-mode helm-mode persistent-scratch-autosave-mode egg-minor-mode)
  968
  '(615 nil)
  nil
  nil
  '((buffer-file-coding-system . undecided-unix) (overwrite-mode)))

(desktop-create-buffer 206
  "/home/christer/.emacs"
  ".emacs"
  'emacs-lisp-mode
  '(company-mode flycheck-mode yas-minor-mode helm-mode persistent-scratch-autosave-mode)
  985
  '(985 nil)
  nil
  nil
  '((tab-width . 4) (buffer-file-coding-system . utf-8-unix) (overwrite-mode)))

(desktop-create-buffer 206
  nil
  "src"
  'dired-mode
  '(company-mode yas-minor-mode helm-mode persistent-scratch-autosave-mode)
  251
  '(638 nil)
  t
  '("/home/christer/projects/neuronet/src/")
  nil)

(desktop-create-buffer 206
  "/home/christer/projects/neuronet/src/main.cpp"
  "main.cpp"
  'c++-mode
  '(abbrev-mode company-mode flycheck-mode yas-minor-mode helm-mode persistent-scratch-autosave-mode uncrustify-mode cmake-project-mode)
  1
  '(nil nil)
  nil
  nil
  '((buffer-file-coding-system . undecided-unix)))

(desktop-create-buffer 206
  "/home/christer/projects/neuronet/qt/src/mainwindow.cpp"
  "mainwindow.cpp"
  'c++-mode
  '(abbrev-mode company-mode flycheck-mode yas-minor-mode helm-mode persistent-scratch-autosave-mode uncrustify-mode)
  1
  '(nil nil)
  nil
  nil
  '((buffer-file-coding-system . undecided-unix)))

(desktop-create-buffer 206
  "/home/christer/projects/neuronet/qt/inc/mainwindow.h"
  "mainwindow.h"
  'c-mode
  '(abbrev-mode company-mode flycheck-mode yas-minor-mode helm-mode persistent-scratch-autosave-mode uncrustify-mode)
  1
  '(nil nil)
  nil
  nil
  '((buffer-file-coding-system . undecided-unix)))

(desktop-create-buffer 206
  nil
  "*RTags Diagnostics*"
  'rtags-diagnostics-mode
  '(company-mode yas-minor-mode helm-mode persistent-scratch-autosave-mode)
  254
  '(nil nil)
  t
  '(:command nil :dir "/home/christer/projects/neuronet/src/")
  nil)

(desktop-create-buffer 206
  "/home/christer/.emacs.d/lisp/sourcepair.el"
  "sourcepair.el"
  'emacs-lisp-mode
  '(company-mode flycheck-mode yas-minor-mode helm-mode persistent-scratch-autosave-mode)
  5314
  '(5882 nil)
  nil
  nil
  '((buffer-file-coding-system . prefer-utf-8-unix) (overwrite-mode)))

(desktop-create-buffer 206
  "/home/christer/projects/neuronet/src/neuralnet.log"
  "neuralnet.log"
  'fundamental-mode
  '(company-mode yas-minor-mode helm-mode persistent-scratch-autosave-mode egg-minor-mode)
  1
  '(nil nil)
  nil
  nil
  '((buffer-file-coding-system . undecided-unix)))

(desktop-create-buffer 206
  nil
  "qt"
  'dired-mode
  '(company-mode yas-minor-mode helm-mode persistent-scratch-autosave-mode)
  195
  '(nil nil)
  t
  '("/home/christer/projects/neuronet/qt/")
  nil)

(desktop-create-buffer 206
  nil
  "inc"
  'dired-mode
  '(company-mode yas-minor-mode helm-mode persistent-scratch-autosave-mode)
  197
  '(nil nil)
  t
  '("/home/christer/projects/neuronet/qt/inc/")
  nil)

(desktop-create-buffer 206
  nil
  "resources"
  'dired-mode
  '(company-mode yas-minor-mode helm-mode persistent-scratch-autosave-mode)
  201
  '(nil nil)
  t
  '("/home/christer/projects/neuronet/resources/")
  nil)

(desktop-create-buffer 206
  nil
  "lisp"
  'dired-mode
  '(company-mode yas-minor-mode helm-mode persistent-scratch-autosave-mode)
  191
  '(nil nil)
  t
  '("/home/christer/.emacs.d/lisp/")
  nil)

(desktop-create-buffer 206
  "/home/christer/projects/neuronet/CMakeLists.txt"
  "CMakeLists.txt"
  'cmake-mode
  '(company-mode flycheck-mode yas-minor-mode helm-mode persistent-scratch-autosave-mode egg-minor-mode)
  1
  '(207 nil)
  nil
  nil
  '((buffer-file-coding-system . undecided-unix) (overwrite-mode)))

(desktop-create-buffer 206
  nil
  "projects"
  'dired-mode
  '(company-mode yas-minor-mode helm-mode persistent-scratch-autosave-mode)
  264
  '(nil nil)
  t
  '("/home/christer/projects/")
  nil)

(desktop-create-buffer 206
  nil
  "christer"
  'dired-mode
  '(company-mode yas-minor-mode helm-mode persistent-scratch-autosave-mode)
  4993
  '(9110 nil)
  t
  '("/home/christer/")
  nil)

(desktop-create-buffer 206
  nil
  "3pp"
  'dired-mode
  '(company-mode yas-minor-mode helm-mode persistent-scratch-autosave-mode)
  196
  '(nil nil)
  t
  '("/home/christer/projects/neuronet/3pp/")
  nil)

(desktop-create-buffer 206
  nil
  "spdlog"
  'dired-mode
  '(company-mode yas-minor-mode helm-mode persistent-scratch-autosave-mode)
  201
  '(nil nil)
  t
  '("/home/christer/projects/neuronet/3pp/spdlog/")
  nil)

(desktop-create-buffer 206
  nil
  "forms"
  'dired-mode
  '(company-mode yas-minor-mode helm-mode persistent-scratch-autosave-mode)
  198
  '(nil nil)
  t
  '("/home/christer/projects/neuronet/forms/")
  nil)

(desktop-create-buffer 206
  nil
  "src"
  'dired-mode
  '(company-mode yas-minor-mode helm-mode persistent-scratch-autosave-mode)
  197
  '(nil nil)
  t
  '("/home/christer/projects/neuronet/qt/src/")
  nil)

(desktop-create-buffer 206
  nil
  "neuronet"
  'dired-mode
  '(company-mode yas-minor-mode helm-mode persistent-scratch-autosave-mode)
  866
  '(1 nil)
  t
  '("/home/christer/projects/neuronet/")
  nil)

(desktop-create-buffer 206
  nil
  ".emacs.d"
  'dired-mode
  '(company-mode yas-minor-mode helm-mode persistent-scratch-autosave-mode)
  1478
  '(1478 nil)
  t
  '("/home/christer/.emacs.d/")
  nil)

