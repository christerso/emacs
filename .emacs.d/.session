;;; Automatically generated on Wed Mar  1 13:36:59 2017
;;; Invoked by christer@Labbox using 24.5.1
(setq-default session-file-alist '(("~/projects/gocode/src/github.com/christerso/hello/hello.go" 191 286 1 nil nil 211 (overwrite-mode)) ("~/.emacs" 7863 7776 1 nil nil 7863 (overwrite-mode)) ("~/.emacs.d/elpa/go-impl-20170125.752/go-impl-autoloads.el" 348 nil 1 nil nil 348 (overwrite-mode)) ("~/.emacs.d/elpa/go-complete-20151015.228/go-complete-autoloads.el" 394 nil 1 nil nil 394 (overwrite-mode)) ("~/.emacs.d/elpa/go-guru-20161117.331/go-guru-autoloads.el" 2730 nil 1 nil nil 2730 (overwrite-mode)) ("~/.bashrc" 4238 4289 1 nil nil 4413 (overwrite-mode)) ("~/projects/go/src/github.com/christerso/hello/hello.go" 24 214 1 nil nil 321 (overwrite-mode)) ("~/.emacs.d/elpa/go-snippets-20151121.2257/go-snippets-autoloads.el" 518 nil 1 nil nil 518 (overwrite-mode)) ("~/.emacs.d/elpa/go-scratch-20150809.2140/go-scratch-autoloads.el" 375 nil 1 nil nil 375 (overwrite-mode)) ("~/.emacs.d/elpa/go-playground-cli-20160503.214/go-playground-cli-autoloads.el" 725 nil 1 nil nil 725 (overwrite-mode)) ("~/.emacs.d/elpa/request-20170131.1747/request-autoloads.el" 228 nil 1 nil nil 228 (overwrite-mode)) ("~/.emacs.d/elpa/deferred-20161228.1930/deferred-autoloads.el" 230 nil 1 nil nil 230 (overwrite-mode)) ("~/.emacs.d/elpa/names-20151201.404/names-autoloads.el" 3528 nil 1 nil nil 3528 (overwrite-mode)) ("~/.emacs.d/elpa/go-playground-20170226.43/go-playground-autoloads.el" 725 nil 1 nil nil 725 (overwrite-mode)) ("~/.emacs.d/elpa/gotest-20161017.204/gotest-autoloads.el" 1119 nil 1 nil nil 1119 (overwrite-mode)) ("~/.emacs.d/elpa/go-autocomplete-20150903.1940/go-autocomplete-autoloads.el" 252 nil 1 nil nil 252 (overwrite-mode)) ("~/.emacs.d/elpa/auto-complete-20170124.1845/auto-complete-autoloads.el" 1711 nil 1 nil nil 1711 (overwrite-mode)) ("~/.emacs.d/elpa/exec-path-from-shell-20170212.2116/exec-path-from-shell-autoloads.el" 1262 nil 1 nil nil 1262 (overwrite-mode)) ("~/.emacs.d/elpa/company-go-20161006.1616/company-go-autoloads.el" 383 nil 1 nil nil 383 (overwrite-mode)) ("~/.emacs.d/elpa/go-mode-20170228.916/go-mode-autoloads.el" 3081 nil 1 nil nil 3081 (overwrite-mode)) ("/storage/projects/neuronet/src/network.cpp" 3058 518 1 nil nil 623 (overwrite-mode)) ("~/.emacs.d/elpa/git-gutter-20161105.656/git-gutter-autoloads.el" 1458 nil 1 nil nil 1458 (overwrite-mode)) ("~/projects/neuronet/qt/inc/mainwindow.h" 43 267 1 nil nil 295 (overwrite-mode)) ("~/projects/neuronet/src/CMakeLists.txt" 183 67 1 nil nil 95 (overwrite-mode)) ("~/projects/Home24/readme.txt" 276 557 1 nil nil 295 (overwrite-mode)) ("~/projects/Home24/articles.py" 314 302 1 nil nil 302 (overwrite-mode)) ("~/projects/Home24/home24.py" 994 1139 1 nil nil 1536 (overwrite-mode)) ("~/projects/Home24/small-test-set.json" 343 3228 1 nil nil 343 (overwrite-mode)) ("~/projects/playback-cpp-coding-challenge-master/fileSink.cpp" 3616 4075 1 nil nil 2321 (overwrite-mode)) ("~/.emacs.d/elpa/eyedropper-20170221.1640/eyedropper-autoloads.el" 2900 nil 1 nil nil 2900 (overwrite-mode)) ("~/.emacs.d/elpa/hexrgb-20170223.738/hexrgb-autoloads.el" 7184 nil 1 nil nil 7184 (overwrite-mode)) ("~/.emacs.d/elpa/font-lock+-20170222.1755/font-lock+-autoloads.el" 234 nil 1 nil nil 234 (overwrite-mode)) ("~/.emacs.d/elpa/facemenu+-20170222.1744/facemenu+-autoloads.el" 5554 nil 1 nil nil 5554 (overwrite-mode)) ("~/.emacs.d/elpa/company-anaconda-20160809.705/company-anaconda-autoloads.el" 510 nil 1 nil nil 510 (overwrite-mode)) ("~/.emacs.d/elpa/anaconda-mode-20170214.556/anaconda-mode-autoloads.el" 599 nil 1 nil nil 599 (overwrite-mode)) ("~/.emacs.d/elpa/pythonic-20160221.1123/pythonic-autoloads.el" 482 nil 1 nil nil 482 (overwrite-mode)) ("~/projects/Home24/home24-test-data.json" 105122 185 1 nil nil 105122 (overwrite-mode)) ("~/projects/home24/Home24/CMakeLists.txt" 97 nil 1 nil nil 97 (overwrite-mode)) ("~/.emacs.d/elpa/cmake-mode-20160928.505/cmake-mode-autoloads.el" 1478 nil 1 nil nil 1478 (overwrite-mode)) ("~/.emacs.d/elpa/json-mode-20160803.1606/json-mode-autoloads.el" 702 nil 1 nil nil 702 (overwrite-mode)) ("~/.emacs.d/elpa/json-reformat-20160212.53/json-reformat-autoloads.el" 566 nil 1 nil nil 566 (overwrite-mode)) ("~/.emacs.d/elpa/json-snatcher-20150511.2047/json-snatcher-autoloads.el" 443 nil 1 nil nil 443 (overwrite-mode)) ("~/.emacs.d/elpa/flymake-json-20130423.2357/flymake-json-autoloads.el" 562 nil 1 nil nil 562 (overwrite-mode)) ("~/.emacs.d/elpa/flymake-easy-20140818.55/flymake-easy-autoloads.el" 245 nil 1 nil nil 245 (overwrite-mode)) ("~/.offlineimaprc" 55 255 1 nil nil 55 (overwrite-mode)) ("~/projects/playback-cpp-coding-challenge-master/player.cpp" 1541 813 1 nil nil 818 (overwrite-mode)) ("/storage/projects/neuronet/src/neuron.h" 887 nil 1 nil nil 887 (overwrite-mode)) ("~/.emacs.d/elpa/sr-speedbar-20161025.131/sr-speedbar-autoloads.el" 702 nil 1 nil nil 702 (overwrite-mode)) ("~/.emacs.d/lisp/sourcepair.el" 5226 5184 1 nil nil 5226 (overwrite-mode)) ("~/Maildir/[Gmail].Drafts/cur/1487787893.95be2e0444cfe054.labbox:2,DS" 45 282 1 nil nil 233 (overwrite-mode)) ("~/.mutt/muttrc" 40 nil 1 nil nil 40 (overwrite-mode)) ("~/.emacs.d/lisp/mu/mu4e/mu4e.el" 2462 nil 1 nil nil 1 (overwrite-mode)) ("~/.emacs.d/elpa/notmuch-20170127.1808/notmuch-autoloads.el" 4159 nil 1 nil nil 4159 (overwrite-mode)) ("~/.emacs.d/elpa/ag-readme.txt" 99 62 1 nil nil 99 (overwrite-mode)) ("~/.emacs.d/elpa/twilight-theme-20120412.603/twilight-theme-autoloads.el" 431 nil 1 nil nil 431 (overwrite-mode)) ("~/projects/playback-cpp-coding-challenge-master/fileSink.h" 1463 1092 1 nil nil 1092 (overwrite-mode)) ("~/private.el" 1 1 1 nil nil 33 (overwrite-mode)) ("~/projects/neuronet/src/network.cpp" 1983 1985 1 nil t 4587 (overwrite-mode)) ("~/projects/neuronet/src/neuron.h" 1165 960 1 nil nil 951 (overwrite-mode)) ("~/projects/neuronet/src/neuron.cpp" 747 1 1 nil nil 4224 (overwrite-mode)) ("~/projects/neuronet/src/network.h" 995 1 1 nil nil 1382 (overwrite-mode)) ("~/projects/neuronet/src/neuralapi.h" 381 1 1 nil nil 381 (overwrite-mode)) ("~/projects/neuronet/src/test.h" 1 1 1 nil nil 266 (overwrite-mode)) ("~/projects/neuronet/src/main.cpp" 1413 1 1 nil nil 1372 (overwrite-mode)) ("~/projects/neuronet/qt/src/mainwindow.cpp" 65 153 1 nil nil 153 (overwrite-mode)) ("~/projects/neuronet/CMakeLists.txt" 1 207 1 nil nil 252 (overwrite-mode)) ("~/.emacs_workgroups" 1 nil 1 nil nil 1 (overwrite-mode)) ("~/.emacs.d/elpa/helm-ag-20170209.745/helm-ag-autoloads.el" 910 nil 1 nil nil 910 (overwrite-mode)) ("~/.emacs.d/elpa/ag-20161228.1641/ag-autoloads.el" 3029 nil 1 nil nil 3029 (overwrite-mode)) ("~/.emacs.d/elpa/workgroups2-20141102.1122/workgroups2-autoloads.el" 801 nil 1 nil nil 801 (overwrite-mode)) ("~/.emacs.d/elpa/workgroups-20110726.941/workgroups-autoloads.el" 234 nil 1 nil nil 234 (overwrite-mode)) ("~/.emacs.d/elpa/desktop+-20170107.1332/desktop+-autoloads.el" 1818 nil 1 nil nil 1818 (overwrite-mode)) ("~/.emacs.d/elpa/f3-20160628.1601/f3-autoloads.el" 557 nil 1 nil nil 557 (overwrite-mode)) ("~/.emacs.d/elpa/realgud-20170218.740/realgud-autoloads.el" 815 nil 1 nil nil 815 (overwrite-mode)) ("~/.emacs.d/elpa/persp-fr-20161226.1241/persp-fr-autoloads.el" 557 nil 1 nil nil 557 (overwrite-mode)) ("~/.emacs.d/elpa/persp-mode-20170123.1056/persp-mode-autoloads.el" 1656 nil 1 nil nil 1656 (overwrite-mode)) ("~/.emacs.d/elpa/perspective-20160609.1444/perspective-autoloads.el" 997 nil 1 nil nil 997 (overwrite-mode)) ("~/.emacs.d/.emacs_workgroups" 44 nil 1 nil nil 44 (overwrite-mode))))
(setq-default file-name-history '("~/.emacs.d/elpa/go-impl-20170125.752/go-impl-autoloads.el" "~/.emacs.d/elpa/go-complete-20151015.228/go-complete-autoloads.el" "~/.emacs.d/elpa/go-guru-20161117.331/go-guru-autoloads.el" "~/.bashrc" "/usr/local/go/src/fmt/print.go" "~/projects/gocode/src/github.com/christerso/hello/hello.go" "~/.emacs" "/usr/local/go/src/fmt/doc.go" "~/projects/gocode/bin/godef" "~/.emacs.d/elpa/go-snippets-20151121.2257/go-snippets-autoloads.el" "~/.emacs.d/elpa/go-scratch-20150809.2140/go-scratch-autoloads.el" "~/.emacs.d/elpa/go-playground-cli-20160503.214/go-playground-cli-autoloads.el" "~/.emacs.d/elpa/request-20170131.1747/request-autoloads.el" "~/.emacs.d/elpa/deferred-20161228.1930/deferred-autoloads.el" "~/.emacs.d/elpa/names-20151201.404/names-autoloads.el" "~/.emacs.d/elpa/go-playground-20170226.43/go-playground-autoloads.el" "~/.emacs.d/elpa/gotest-20161017.204/gotest-autoloads.el" "~/projects/go/src/github.com/christerso/hello/hello.go" "~/.emacs.d/elpa/go-autocomplete-20150903.1940/go-autocomplete-autoloads.el" "~/.emacs.d/elpa/auto-complete-20170124.1845/auto-complete-autoloads.el" "/opt/Qt5.8.0/5.8/gcc_64/include/QtCore/qstring.h" "~/projects/neuronet/3pp/spdlog/include/spdlog/details/log_msg.h" "~/projects/neuronet/3pp/spdlog/include/spdlog/details/logger_impl.h" "/usr/include/c++/5/bits/shared_ptr_base.h" "~/projects/Home24/home24.py" "~/projects/Home24/articles.py" "~/projects/Home24/readme.txt" "~/projects/playback-cpp-coding-challenge-master/mixer.h" "~/projects/playback-cpp-coding-challenge-master/mixersource.cpp" "~/projects/playback-cpp-coding-challenge-master/fileReader.cpp" "~/projects/playback-cpp-coding-challenge-master/fileReader.h" "~/projects/playback-cpp-coding-challenge-master/player.cpp" "~/projects/playback-cpp-coding-challenge-master/fileSink.h" "~/projects/playback-cpp-coding-challenge-master/fileSink.cpp" "~/projects/playback-cpp-coding-challenge-master/mixer.cpp" "~/projects/playback-cpp-coding-challenge-master/player.h" "~/projects/playback-cpp-coding-challenge-master/networkReader.h" "~/projects/playback-cpp-coding-challenge-master/mixersource.h" "~/projects/playback-cpp-coding-challenge-master/main.cpp" "~/projects/neuronet/CMakeLists.txt" "~/projects/neuronet/src/CMakeLists.txt" "~/projects/neuronet/qt/inc/mainwindow.h" "~/projects/neuronet/qt/src/mainwindow.cpp" "~/projects/neuronet/src/main.cpp" "~/projects/neuronet/build/src/ui_mainwindow.h" "/../storage/projects/neuronet/src/neuron.cpp" "/../storage/projects/neuronet/src/network.h" "/../storage/projects/neuronet/src/network.cpp" "~/.emacs.d/.emacs-buffers" "~/.emacs.d/elpa/exec-path-from-shell-20170212.2116/exec-path-from-shell-autoloads.el" "~/.emacs.d/elpa/company-go-20161006.1616/company-go-autoloads.el" "~/.emacs.d/elpa/go-mode-20170228.916/go-mode-autoloads.el" "~/.emacs.d/elpa/git-gutter-20161105.656/git-gutter-autoloads.el" "/home/christer/.private.el"))
(setq-default search-ring '("go-guru" "projects" "gofmt" "go" "GOPATH" "setenv" "exec-path" "golang" ".bashr" "compile" "go-auto" "go-" "c++"))
(setq-default bookmark-history '("RTags_0" "RTags_1" "RTags_2"))
(setq-default buffer-name-history '("*Completions*" ".emacs" "snippet.go" "hello.go" "*Help*" "doc.go" "godef" "network.cpp" "irc.freenode.net:6697" ".private.el" "neuron.cpp" "*RTags Log*" "*shell*" "*Messages*" "*gud-neuronet*" "main.cpp<src>" "mainwindow.h" "*Customize Group: Cmake Ide*" "network.h" "main.cpp" ".emacs.d" "*Helm Help*" ".offlineimaprc" "CMakeLists.txt" "mu4e-about.org" "sourcepair.el" "NEWS.org" "baloofilerc" "articles.py" "0blayout-readme.txt" "home24-test-data.json" "__init__.py" "*scratch*" "*pdb articles.py shell*" "Home24<christer>" "home24.py" "argparse.py" "*anaconda-mode*"))
(setq-default command-history '((kill-buffer "*Completions*") (go-complete-at-point) (execute-extended-command nil "go-complete-at-point") (switch-to-buffer ".emacs") (go-guru-callers) (execute-extended-command nil "go-guru-callers") (go-guru-set-scope) (execute-extended-command nil "go-guru-set-scope") (go-play-buffer) (execute-extended-command nil "go-play-buffer") (kill-buffer "snippet.go") (go-playground-exec) (execute-extended-command nil "go-playground-exec") (go-playground) (execute-extended-command nil "go-playground") (go-guru-callees) (execute-extended-command nil "go-guru-callees") (switch-to-buffer "hello.go") (eval-region (region-beginning) (region-end)) (execute-extended-command nil "eval-region") (switch-to-buffer "*Help*") (package-list-packages nil) (execute-extended-command nil "package-list-packages") (compile "go build -v && go test -v && go vet" nil) (execute-extended-command nil "compile") (kill-buffer "doc.go") (describe-key "." 1 nil) (describe-key "\256" 1 nil) (godef-jump (point)) (execute-extended-command nil "godef-jump") (dired "/home/christer/projects/gocode/src/github.com/christerso/hello/") (compile "go build -v" nil) (kill-buffer "godef") (dired "/home/christer/projects/") (dired "/home/christer/") (kill-buffer "hello.go") (execute-extended-command nil "godoc") (shell nil) (execute-extended-command nil "shell") (package-install (quote exec-path-from-shell)) (execute-extended-command nil "package-install") (godoc "import") (go-mode) (execute-extended-command nil "go-mode") (dired "/home/christer/projects/go/")))
(setq-default compile-history '("go build -v && go test -v && go vet" "go build -v" "nn" "cmake --build /home/christer/projects/neuronet/bin/" "cmake --build /home/christer/projects/neuronet/" "cmake --build /home/christer/projects/neuronet/build/" " ninja" " make -j10" "cd ~/projects/neuronet/build/&& make -j10" "make -k "))
(setq-default extended-command-history '("go-complete-at-point" "go-guru-callers" "go-guru-set-scope" "go-play-buffer" "go-playground-exec" "go-playground" "go-guru-callees" "eval-region" "package-list-packages" "compile" "godef-jump" "godoc" "shell" "package-install" "go-mode" "fringe-mode" "circe" "linum-mode" "gud-gdb" "debug" "gud-stop-subjob" "gud-next" "tool-bar-mode" "customize-group" "customize-apropos" "cmake-ide-compile" "test-this" "describe-function" "toggle-menu-bar-mode-from-frame" "facemenup-customize-face-at-point" "eyedropper-foreground" "anaconda-mode-complete" "toggle-read-only" "lisp-mode" "speedbar-mode" "notmuch" "customize-face" "customize-apropos-faces" "sr-speedbar-open" "sr-speedbar-close" "speedbar" "mu4e-mark-unmark-all" "mu4e" "cmake-project-mode" "gnus-summary-sort-by-date" "gnus" "load-library" "set-variable"))
(setq-default face-name-history '("mode-line"))
(setq-default find-tag-history '(""))
(setq-default go-godoc-history '("import"))
(setq-default go-guru--scope-history '("/home/christer/projects/golang"))
(setq-default gud-gdb-history '("gdb -i=mi "))
(setq-default gud-gud-gdb-history '("gdb --fullname /home/christer/projects/neuronet/build/src/neuronet" "gdb --fullname build/src/neuronet" "gdb --fullname ../build/src/neuronet" "gdb --fullname src/neuronet" "gdb --fullname "))
(setq-default helm-ag--command-history '("test"))
(setq-default helm-ff-history '("/home/christer/projects/gocode/src/github.com/christerso/hello/" "/home/christer/projects/" "/home/christer/projects/go/src/github.com/christerso/hello/" "/home/christer/" "/home/christer/projects/Home24/" "/../storage/projects/neuronet/src/" "/home/christer/.mutt/" "/home/christer/.emacs.d/elpa/" "/home/christer/projects/neuronet/src/" "/home/christer/projects/neuronet/" "/home/christer/projects/neuronet/src/spdlog/fmt/bundled/" "/home/christer/.elisp.d/" "/home/christer/.emacs.d/"))
(setq-default helm-source-complex-command-history '((name . "Complex Command History") (candidates closure (t) nil (let* \.\.\. \.\.\. \.\.\.)) (keymap keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.) (action ("Eval" closure \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.) ("Edit and eval" closure \.\.\. \.\.\. \.\.\.)) (persistent-action . helm-sexp-eval) (multiline) (filtered-candidate-transformer helm-fuzzy-highlight-matches) (match helm-mm-exact-match helm-mm-match) (redisplay . identity) (header-line . "C-j: helm-sexp-eval (keeping session)") (multimatch)))
(setq-default helm-source-file-name-history '((name . "File Name History") (candidates . file-name-history) (keymap keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.) (action . helm-type-file-actions) (persistent-action . ignore) (filtered-candidate-transformer helm-file-name-history-transformer helm-fuzzy-highlight-matches) (match helm-mm-exact-match helm-mm-match) (redisplay . identity) (header-line . "C-j: ignore (keeping session)") (multimatch)))
(setq-default ido-buffer-history '("*Completions*" ".emacs" "snippet.go" "hello.go" "*Help*" "doc.go" "godef"))
(setq-default ido-file-history '("." ".bashrc" ".private.el" "baloofilerc" "readme.txt" "0blayout-readme.txt" "small-test-set.json" ".emacs" ".offlineimaprc" "private.el" "test.h" "neuralapi.h" "neuralnet.log" "mainwindow.h" "mainwindow.cpp" "main.cpp" "CMakeLists.txt" "session.el"))
(setq-default minibuffer-history '("/home/christer/projects/go/src/github.com/christerso/hello/" "exec-path-from-shell" "" "Freenode" "cmake-ide" "cmake" #("/tmp/qtc-cmake-daRE2p/" 0 22 (fontified t)) "test-this" "concat" "substring" "subst" #("<+>" 0 3 (face speedbar-button-face mouse-face speedbar-highlight-face invisible nil speedbar-text "<+>" help-echo dframe-help-echo speedbar-function speedbar-dired speedbar-token "Ludeon Studios")) "q"))
(setq-default notmuch-search-history '("SoundCloud"))
(setq-default notmuch-select-tag-history '("flagged"))
(setq-default occur-collect-regexp-history '("\\1"))
(setq-default query-replace-history '("11" "6" "10" "5" "9" "4"))
(setq-default read-expression-history '("wq"))
(setq-default realgud:pdb-minibuffer-history '("pdb /home/christer/projects/Home24/articles.py"))
(setq-default table-capture-columns-history '(""))
(setq-default table-capture-justify-history '("left"))
(setq-default table-capture-min-cell-width-history '("5"))
(setq-default table-cell-height-history '("1"))
(setq-default table-cell-span-direction-history '("right"))
(setq-default table-cell-split-contents-to-history '("split"))
(setq-default table-cell-split-orientation-history '("horizontally"))
(setq-default table-cell-width-history '("5"))
(setq-default table-col-delim-regexp-history '(""))
(setq-default table-columns-history '("3"))
(setq-default table-insert-row-column-history '("row"))
(setq-default table-justify-history '("center"))
(setq-default table-row-delim-regexp-history '(""))
(setq-default table-rows-history '("3"))
(setq-default table-sequence-count-history '("0"))
(setq-default table-sequence-increment-history '("1"))
(setq-default table-sequence-interval-history '("1"))
(setq-default table-sequence-justify-history '("left"))
(setq-default table-sequence-string-history '("0"))
(setq-default table-source-caption-history '("Table"))
(setq-default table-source-language-history '("html"))
(setq-default table-target-history '("cell"))
(setq-default yes-or-no-p-history '("yes"))
